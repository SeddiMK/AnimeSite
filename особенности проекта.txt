https://react-anime-max.vercel.app
https://github.com/SeddiMK/React--Send_comment

import { FaVk, FaGoogle, FaEnvelope } from 'react-icons/fa'; иконки react-icons
coment-review+del
rating-star
particles
search
login_animate-checkbox

firebase.google
firebase-storage
local-storage
показать пароль
checkBox remember me запомнить меня
reactPlayer light- легкая загрузка
зыбыли пароль. восстановление пароля
регистрация
случайное видео, анимация загрузки, и при повторном нажатии


// full desc item
кнопка смотреть онлайн
кнопка написать отзыв 
кнопка добавить в список (добавляет в redux уникальные id anime)

кнопка написать комментарий

// личный кабинет
1. Загрузить, удалить аватар(при перехаде между страницами и перезагрузке сайта).
2. Прогресс зарузки.
3. Изменить ник.

# Технологии:

- **ReactJS 18**
- **TypeScript**
- **Redux Toolkit** (хранение данных)
- **React Router v6** (навигация)
- **Axios + Fetch** (отправка запроса на бэкенд)
- React Hooks (хуки)
- Prettier (форматирование кода)
- CSS-Modules / SCSS (стилизация)
- React Content Loader (скелетон)
- Code Splitting 
- React Loadable 
- Particles.js (анимированный background) 
- React Transition Group (плавный popup добавления в список) 
- Hamburger React (анимированный бургер) 
- useAuth.ts (свой хук) 
- Use Resize Observer (динамическое отслеживание высоты, ширины блока) 
- Kodik (база аниме контента)

 Данное приложение разаработано с применением библиотеки React, 
а так же Redux-toolkit, Axios,TypeScript, JavaScript, HTML, БЭМ, SCSS,
адаптивная верстка, local-storage.
            
Данные пользователя, аутентификация реализовано с помощью
firebase.google, firebase-storage.
          
 Технологии:   <b>Технологии:</b> - **ReactJS 18** - **TypeScript** - **Redux
            Toolkit** (хранение данных) - **Firebase.Google** (хранение данных о
            пользователе, регистрация)- **React Router** (навигация) - **Axios +
            Fetch** (отправка запроса на бэкенд) - React Hooks (хуки) - Prettier
            (форматирование кода) - CSS-Modules / SCSS (стилизация) - React
            Content Loader (скелетон) - Code Splitting - React Loadable -
            Particles.js (анимированный background) - React Transition Group
            (плавный popup добавления в список) - Hamburger React (анимированный
            бургер) - useAuth.ts (свой хук) - Use Resize Observer (динамическое
            отслеживание высоты, ширины блока) - Kodik (база аниме контента).
          </p>
          <p>
            <b>Здесь реализовано:</b>
            <br />
            мгновенный поиск,
            <br />
            skeletons (показывает образ карточек аниме во время запроса с
            бекенда),
            <br />
            preloader,
            <br />
            меню burger,
            <br />
            анимация пунктов меню.
            <br />
            <b>Работают все страницы:</b>
            <br />
            - На странице выбора аниме, кнопка "Написать отзыв" оставит
            комментарии ниже.
            <br /> Окно вывода комментария: валидация email, валидация
            комментария (нельзя написать один и тот же комментарий дважды).
            Кнопка "Добавить в список" добавляет в redux уникальные id anime.
            <br />
            - Войти в личный кабинет: валидация логина и пароля, кнопка показать
            пароль, чек бокс- запомнить меня (после перезагрузки сайта не
            выходит из личного кабинета). При нажатии на "Забыли пароль" придет
            автоматическое письмо на указанный email при регистрации, при
            переходе на стр входа в личный кабинет фокус на вводе Email.
            <br />
            - Страница регистрации. Вход и регистрация через социальные сети
            пока не реализованно. При переходе на стр регистрации фокус на вводе
            Email.
            <br />- Личный кабинет: загрузить, удалить аватар
            (Firebase.storage), изменить ник.
          </p>